<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BTNAccount.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAhCAYAAABX5MJvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABDpJREFUWEetmFlPU0EUx3lyeZQ39QNo9IuoH0Hiq68mmsjiFkWNILjFqAV3wQYi
        Abe44A6oIIKCSxFQUXBBS1tXltLj/387I7fXU3srnuSXmztnmcN05py55GQrIjIfrADbQQDUmOc2wPF5
        xvT/CgLngiLQBhKTiYSEIzF5/fa99L4adJ585zj1oBUUgDkmxL8LgswAq0Dk5+iYdDx5IVX1jbJh11HJ
        3xH4g40Yr2polM6nvTI6Ng43GQH5YLYJmZ3AcRHojccnpbXzmRTvO6lOnI7Ne47LrXudMjERRxjpAQtN
        aH8Ch2UgNvjhk5QcPK1O4pfSQ0EZ+viZiUTAEjPF38UkEO8K9cv68iNq4GzZgDjdoZdMhMvy90RgsBBE
        up73S4ESbDownkkkBhabKVMFitmglz+B3xVgYO6VgpIKVe+FK2J+mhCYZaaeEgwWcBP52QPllTXyGKs1
        EXc2nYyNTzh/ZVlFjWrvpjQQFG52yBozdVIwMAeE77Q+Vh3dHKo+J6M4rprwWB441aD6uWl+0E1zHt9c
        k4KTRBHrAI+V5mRZX3ZEorGvDCB9A0Oy9+gZKdpZ6Tz78U6Jffkm68oOq/6WLXtP2DqSb1JwkmhjIdIc
        3NRevElH+RSOOgm5ddxHn0e458Sxc+s0HqGgQe7ZBNgLEqyEmrGbux1P6SjX73ao+hsYp7S0d6t6N9Vn
        r9GUm2Muk1jBms+Sqxm7aXn4hI5ytemBqm9sanf0tNP0bjbtPiaJZK9ZziS2sflohl7qLt+hkwzhGBeW
        Vqbo+G6On9Rdup2iS8dIcn9tYRKV7IKakRc2ru8/ftLRaVKbscE4zuejZ33O+DfoWQ+8vhoDgx/oEmAS
        VS9evVWNNCqC53/XBy5n7Ot3u6zOOPWanwavAZCqrFaC1F64KeMoTppwvAZ6zU/jtWslfO+Js40tdHIk
        1DcgwXPXJYDixWeo/43RiDRcbVb9vYxEv9C8mEn4Oh3lh2ttuZWGK02qDccptGNp12wsG6dORx6TmAcS
        vBFpxhZebCjtXT2q3vKwm/cXkfuoKZreklInTMFq7cBu14wt4eTSyf4T9aresv9kvWOX6SdOqZgUvBSy
        Kdkj56UQrXpyMvlTcBk1Gwv1FNrTT7NJ1zuSXbRN76JsSFYyNSc/ts0o65DULkrBwFqe8xLcCb1OvLyw
        aQ2HIxlvXJlsXfeJ1WbqKcHgLNDDkqxVvCKUZeId10hny7jvpm5WM83UqQLFAhDhJTfTX5wtjJfxjmkF
        BkuBc9v22wMywTi+b9tWTCJRdkV+N2iB/cI9YH4C/98dVuDA639PHEftP3yBcQ8sMKGzEzjyW3QlGGYd
        YfuuRmVNVys4zkrIQuT5Fv3zep+tIAjrCL+y7wO0moTTfNgF2Y55L+C76QU8f7Tj5NP/KtcEgeeCPLAV
        8P8SQfPkO8eTvcC35OT8AleuLJe+4ulqAAAAAElFTkSuQmCC
</value>
  </data>
</root>